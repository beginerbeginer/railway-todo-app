openapi: 3.0.0
info:
  title: TechTrain Railway 中級編
  version: 1.0.0
  description: TechTrain Railway中級編で使用するTODOAPI
servers:
  - url: https://virtserver.swaggerhub.com/INFO_3/TODOApplication/1.0.0
tags:
  - name: 'user'
    description: 'ユーザ関連API'
  - name: 'task'
    description: 'TODO関連API'

paths:
  /signin:
    post:
      tags:
        - user
      summary: ユーザ認証API
      description: |
        ユーザ認証を行います。
        ユーザのメールアドレス・パスワードによるBasic認証を行い、認証済みユーザには認証トークンを返却します。
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
            example:
              email: 'example@example.com'
              password: 'password123'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
              example:
                token: 'sampleToken123'
        '400':
          description: Requested data was wrong
          content:
            application/json:
              schema:
                type: object
                properties:
                  ErrorCode:
                    type: integer
                  ErrorMessageJP:
                    type: string
                  ErrorMessageEN:
                    type: string
              example:
                ErrorCode: 400
                ErrorMessageJP: 'バリデーションエラー'
                ErrorMessageEN: 'validation error'
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  ErrorCode:
                    type: integer
                  ErrorMessageJP:
                    type: string
                  ErrorMessageEN:
                    type: string
              example:
                ErrorCode: 403
                ErrorMessageJP: '認証エラー'
                ErrorMessageEN: 'You are not authorized user'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  ErrorCode:
                    type: integer
                  ErrorMessageJP:
                    type: string
                  ErrorMessageEN:
                    type: string
              example:
                ErrorCode: 500
                ErrorMessageJP: 'サーバでエラーが発生しました。'
                ErrorMessageEN: 'Error occurred at server.'
  /users:
    post:
      tags:
        - user
      summary: ユーザ情報作成API
      description: |
        ユーザ情報を作成します。
        ユーザの名前情報、メールアドレス、パスワードをリクエストで受け取り、ユーザIDと認証用のトークンを生成しデータベースへ保存します。
        生成された認証用のトークンがレスポンスとして返されます。
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
            example:
              name: 'John Doe'
              email: 'john@example.com'
              password: 'john123'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
              example:
                token: 'sampleToken456'
        '400':
          description: Requested data was wrong
          content:
            application/json:
              schema:
                type: object
                properties:
                  ErrorCode:
                    type: integer
                  ErrorMessageJP:
                    type: string
                  ErrorMessageEN:
                    type: string
              example:
                ErrorCode: 400
                ErrorMessageJP: 'バリデーションエラー'
                ErrorMessageEN: 'validation error'
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  ErrorCode:
                    type: integer
                  ErrorMessageJP:
                    type: string
                  ErrorMessageEN:
                    type: string
              example:
                ErrorCode: 401
                ErrorMessageJP: '認証エラー'
                ErrorMessageEN: 'You are not authorized user'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  ErrorCode:
                    type: integer
                  ErrorMessageJP:
                    type: string
                  ErrorMessageEN:
                    type: string
              example:
                ErrorCode: 500
                ErrorMessageJP: 'サーバでエラーが発生しました。'
                ErrorMessageEN: 'Error occurred at server.'
    get:
      tags:
        - user
      summary: ユーザ情報取得API
      description: |
        ユーザ情報（ユーザ名）を取得します。
        Authorizationヘッダーに認証情報（JWTトークン）を Bearer XXX の形式で付与することで、認証処理やユーザ情報の検索を行います。
      parameters:
        - name: Authorization
          in: header
          required: true
          description: 認証トークン(JWT) Bearer XXX
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
              example:
                name: 'John Doe'
        '400':
          description: Requested data was wrong
          content:
            application/json:
              schema:
                type: object
                properties:
                  ErrorCode:
                    type: integer
                  ErrorMessageJP:
                    type: string
                  ErrorMessageEN:
                    type: string
              example:
                ErrorCode: 400
                ErrorMessageJP: 'バリデーションエラー'
                ErrorMessageEN: 'validation error'
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  ErrorCode:
                    type: integer
                  ErrorMessageJP:
                    type: string
                  ErrorMessageEN:
                    type: string
              example:
                ErrorCode: 401
                ErrorMessageJP: '認証エラー'
                ErrorMessageEN: 'You are not authorized user'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  ErrorCode:
                    type: integer
                  ErrorMessageJP:
                    type: string
                  ErrorMessageEN:
                    type: string
              example:
                ErrorCode: 500
                ErrorMessageJP: 'サーバでエラーが発生しました。'
                ErrorMessageEN: 'Error occurred at server.'
    put:
      tags:
        - user
      summary: ユーザ情報更新API
      description: ユーザ情報（ユーザ名）の更新をします。
      parameters:
        - name: Authorization
          in: header
          required: true
          description: 認証トークン(JWT) Bearer XXX
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
            example:
              name: 'John Smith'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
              example:
                name: 'John Smith'
        '400':
          description: Requested data was wrong
          content:
            application/json:
              schema:
                type: object
                properties:
                  ErrorCode:
                    type: integer
                  ErrorMessageJP:
                    type: string
                  ErrorMessageEN:
                    type: string
              example:
                ErrorCode: 400
                ErrorMessageJP: 'バリデーションエラー'
                ErrorMessageEN: 'validation error'
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  ErrorCode:
                    type: integer
                  ErrorMessageJP:
                    type: string
                  ErrorMessageEN:
                    type: string
              example:
                ErrorCode: 401
                ErrorMessageJP: '認証エラー'
                ErrorMessageEN: 'You are not authorized user'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  ErrorCode:
                    type: integer
                  ErrorMessageJP:
                    type: string
                  ErrorMessageEN:
                    type: string
              example:
                ErrorCode: 500
                ErrorMessageJP: 'サーバでエラーが発生しました。'
                ErrorMessageEN: 'Error occurred at server.'
  /lists/{listId}/tasks:
    get:
      tags:
        - task
      summary: タスク一覧取得API
      description: タスク一覧を取得します。
      parameters:
        - name: Authorization
          in: header
          required: true
          description: 認証トークン(JWT) Bearer XXX
          schema:
            type: string
        - name: listId
          in: path
          required: true
          description: リストid
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  listId:
                    type: string
                  name:
                    type: string
                  tasks:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        title:
                          type: string
                        detail:
                          type: string
                        limit:
                          type: string
                          format: date-time
                        done:
                          type: boolean
              example:
                listId: '12345'
                name: 'Work Tasks'
                tasks:
                  - id: '1'
                    title: 'Write report'
                    detail: 'Write monthly report'
                    limit: '2023-08-01T12:00:00'
                    done: true
        '400':
          description: Requested data was wrong
          content:
            application/json:
              schema:
                type: object
                properties:
                  ErrorCode:
                    type: integer
                  ErrorMessageJP:
                    type: string
                  ErrorMessageEN:
                    type: string
              example:
                ErrorCode: 400
                ErrorMessageJP: 'バリデーションエラー'
                ErrorMessageEN: 'validation error'
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  ErrorCode:
                    type: integer
                  ErrorMessageJP:
                    type: string
                  ErrorMessageEN:
                    type: string
              example:
                ErrorCode: 401
                ErrorMessageJP: '認証エラー'
                ErrorMessageEN: 'You are not authorized user'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  ErrorCode:
                    type: integer
                  ErrorMessageJP:
                    type: string
                  ErrorMessageEN:
                    type: string
              example:
                ErrorCode: 500
                ErrorMessageJP: 'サーバでエラーが発生しました。'
                ErrorMessageEN: 'Error occurred at server.'
    post:
      tags:
        - task
      summary: タスク作成API
      description: タスクの新規作成をします。
      parameters:
        - name: Authorization
          in: header
          required: true
          description: 認証トークン(JWT) Bearer XXX
          schema:
            type: string
        - name: listId
          in: path
          required: true
          description: リストid
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                detail:
                  type: string
                done:
                  type: boolean
                limit:
                  type: string
                  format: date-time
            example:
              title: 'New Task'
              detail: 'Detail about the new task'
              done: false
              limit: '2023-08-05T12:00:00'
      responses:
        '200':
          description: A successful response.
        '400':
          description: Requested data was wrong
          content:
            application/json:
              schema:
                type: object
                properties:
                  ErrorCode:
                    type: integer
                  ErrorMessageJP:
                    type: string
                  ErrorMessageEN:
                    type: string
              example:
                ErrorCode: 400
                ErrorMessageJP: 'バリデーションエラー'
                ErrorMessageEN: 'validation error'
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  ErrorCode:
                    type: integer
                  ErrorMessageJP:
                    type: string
                  ErrorMessageEN:
                    type: string
              example:
                ErrorCode: 401
                ErrorMessageJP: '認証エラー'
                ErrorMessageEN: 'You are not authorized user'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  ErrorCode:
                    type: integer
                  ErrorMessageJP:
                    type: string
                  ErrorMessageEN:
                    type: string
              example:
                ErrorCode: 500
                ErrorMessageJP: 'サーバでエラーが発生しました。'
                ErrorMessageEN: 'Error occurred at server.'
  /lists/{listId}/tasks/{taskId}:
    get:
      tags:
        - task
      summary: タスク取得API
      description: タスク情報を取得します。
      parameters:
        - name: Authorization
          in: header
          required: true
          description: 認証トークン(JWT) Bearer XXX
          schema:
            type: string
        - name: listId
          in: path
          required: true
          description: リストid
          schema:
            type: string
        - name: taskId
          in: path
          required: true
          description: タスクid
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  taskId:
                    type: string
                  title:
                    type: string
                  detail:
                    type: string
                  done:
                    type: boolean
                  limit:
                    type: string
                    format: date-time
                  listId:
                    type: string
        '400':
          description: Requested data was wrong
          content:
            application/json:
              schema:
                type: object
                properties:
                  ErrorCode:
                    type: integer
                    example: 400
                  ErrorMessageJP:
                    type: string
                    example: 'バリデーションエラー'
                  ErrorMessageEN:
                    type: string
                    example: 'validation error'
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  ErrorCode:
                    type: integer
                    example: 403
                  ErrorMessageJP:
                    type: string
                    example: '認証エラー'
                  ErrorMessageEN:
                    type: string
                    example: 'You are not authorized user'
        '404':
          description: Not found error
          content:
            application/json:
              schema:
                type: object
                properties:
                  ErrorCode:
                    type: integer
                    example: 404
                  ErrorMessageJP:
                    type: string
                    example: 'そのタスクは存在しません。'
                  ErrorMessageEN:
                    type: string
                    example: 'This task is not exists.'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  ErrorCode:
                    type: integer
                    example: 500
                  ErrorMessageJP:
                    type: string
                    example: 'サーバでエラーが発生しました。'
                  ErrorMessageEN:
                    type: string
                    example: 'Error occurred at server.'
    put:
      tags:
        - task
      summary: タスク更新API
      description: タスクの更新をします。
      parameters:
        - name: listId
          in: path
          required: true
          description: リストid
          schema:
            type: string
        - name: taskId
          in: path
          required: true
          description: タスクid
          schema:
            type: string
        - name: Authorization
          in: header
          required: true
          description: 認証トークン(JWT) Bearer XXX
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                detail:
                  type: string
                done:
                  type: boolean
                limit:
                  type: string
                  format: date-time
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  taskId:
                    type: string
                  title:
                    type: string
                  detail:
                    type: string
                  done:
                    type: boolean
                  limit:
                    type: string
                    format: date-time
                  listId:
                    type: string
        '400':
          description: Requested data was wrong
          content:
            application/json:
              schema:
                type: object
                properties:
                  ErrorCode:
                    type: integer
                    example: 400
                  ErrorMessageJP:
                    type: string
                    example: 'バリデーションエラー'
                  ErrorMessageEN:
                    type: string
                    example: 'validation error'
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  ErrorCode:
                    type: integer
                    example: 403
                  ErrorMessageJP:
                    type: string
                    example: '認証エラー'
                  ErrorMessageEN:
                    type: string
                    example: 'You are not authorized user'
        '404':
          description: Not found error
          content:
            application/json:
              schema:
                type: object
                properties:
                  ErrorCode:
                    type: integer
                    example: 404
                  ErrorMessageJP:
                    type: string
                    example: 'そのタスクは存在しません。'
                  ErrorMessageEN:
                    type: string
                    example: 'This task is not exists.'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  ErrorCode:
                    type: integer
                    example: 500
                  ErrorMessageJP:
                    type: string
                    example: 'サーバでエラーが発生しました。'
                  ErrorMessageEN:
                    type: string
                    example: 'Error occurred at server.'
    delete:
      tags:
        - task
      summary: タスク削除API
      description: タスクの削除をします。
      parameters:
        - name: listId
          in: path
          required: true
          description: リストid
          schema:
            type: string
        - name: taskId
          in: path
          required: true
          description: タスクid
          schema:
            type: string
        - name: Authorization
          in: header
          required: true
          description: 認証トークン(JWT) Bearer XXX
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
        '400':
          description: Requested data was wrong
          content:
            application/json:
              schema:
                type: object
                properties:
                  ErrorCode:
                    type: integer
                    example: 400
                  ErrorMessageJP:
                    type: string
                    example: 'バリデーションエラー'
                  ErrorMessageEN:
                    type: string
                    example: 'validation error'
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  ErrorCode:
                    type: integer
                    example: 403
                  ErrorMessageJP:
                    type: string
                    example: '認証エラー'
                  ErrorMessageEN:
                    type: string
                    example: 'You are not authorized user'
        '404':
          description: Not found error
          content:
            application/json:
              schema:
                type: object
                properties:
                  ErrorCode:
                    type: integer
                    example: 404
                  ErrorMessageJP:
                    type: string
                    example: 'そのタスクは存在しません。'
                  ErrorMessageEN:
                    type: string
                    example: 'This task is not exists.'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  ErrorCode:
                    type: integer
                    example: 500
                  ErrorMessageJP:
                    type: string
                    example: 'サーバでエラーが発生しました。'
                  ErrorMessageEN:
                    type: string
                    example: 'Error occurred at server.'
